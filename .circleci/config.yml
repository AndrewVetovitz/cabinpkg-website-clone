version: 2.1

commands:
  npm-install:
    parameters:
      dest:
        type: string
    steps:
      - restore_cache:
          keys: # restores saved npm cache
            - v1-npm-<< parameters.dest >>-cache-{{ .Branch }}-{{ checksum "<< parameters.dest >>/package-lock.json" }}
            - v1-npm-<< parameters.dest >>-cache-{{ .Branch }}-{{ checksum "<< parameters.dest >>/package.json" }}
            - v1-npm-<< parameters.dest >>-cache-{{ .Branch }}-
            - v1-npm-<< parameters.dest >>-cache-
      - run: npm --prefix "$PWD/<< parameters.dest >>" install
      - save_cache:
          key: v1-npm-<< parameters.dest >>-cache-{{ .Branch }}-{{ checksum "<< parameters.dest >>/package-lock.json" }}
          paths: "<< parameters.dest >>/node_modules"
      - save_cache:
          key: v1-npm-<< parameters.dest >>-cache-{{ .Branch }}-{{ checksum "<< parameters.dest >>/package.json" }}
          paths: "<< parameters.dest >>/node_modules"
      - save_cache:
          key: v1-npm-<< parameters.dest >>-cache-{{ .Branch }}-
          paths: "<< parameters.dest >>/node_modules"
      - save_cache:
          key: v1-npm-<< parameters.dest >>-cache-
          paths: "<< parameters.dest >>/node_modules"

jobs:
  prepare:
    docker:
      - image: node:10.12
    steps:
      - checkout
      - npm-install:
          dest: functions
      - npm-install:
          dest: hosting
      - persist_to_workspace:
          root: .
          paths: .

  test:
    docker:
      - image: node:10.12
    steps:
      - attach_workspace:
          at: .
      - run: npm --prefix "$PWD/functions" run lint
      - run: npm --prefix "$PWD/functions" run build
#      - run: npm --prefix "$PWD/hosting" run test
      - run: npm --prefix "$PWD/hosting" run build

  deploy:
    docker:
      - image: node:10.12
    steps:
      - attach_workspace:
          at: .
      - run: npm install -g firebase-tools
      - run:
          name: Deploy
          command: firebase deploy --token "$FIREBASE_TOKEN"
          no_output_timeout: 1h

workflows:
  version: 2
  deploy_and_test:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - deploy:
          requires:
            - prepare
            - test
          filters:
            branches:
              only: master
