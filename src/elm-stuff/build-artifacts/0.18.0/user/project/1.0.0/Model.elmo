var _user$project$Model$initialIsFadein = {$abstract: false, section1: false, demo: false, getStart: false};
var _user$project$Model$Token = F5(
	function (a, b, c, d, e) {
		return {id: a, name: b, owner: c, created_date: d, last_used_date: e};
	});
var _user$project$Model$User = F4(
	function (a, b, c, d) {
		return {id: a, name: b, photo_url: c, github_link: d};
	});
var _user$project$Model$Package = F5(
	function (a, b, c, d, e) {
		return {name: a, version: b, owners: c, cpp_version: d, description: e};
	});
var _user$project$Model$Dependency = F2(
	function (a, b) {
		return {name: a, version: b};
	});
var _user$project$Model$Links = F2(
	function (a, b) {
		return {github: a, homepage: b};
	});
var _user$project$Model$DetailedPackage = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return {name: a, versions: b, owners: c, cpp_version: d, description: e, deps: f, md5hash: g, links: h, license: i, created_date: j};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _user$project$Model$IsFadein = F4(
	function (a, b, c, d) {
		return {$abstract: a, section1: b, demo: c, getStart: d};
	});
var _user$project$Model$Model = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {route: a, signinUser: b, otherUser: c, currentToken: d, listPackages: e, detailedPackage: f, search: g, newTokenName: h, isFadein: i};
	});
var _user$project$Model$Failure = {ctor: 'Failure'};
var _user$project$Model$Success = function (a) {
	return {ctor: 'Success', _0: a};
};
var _user$project$Model$Requesting = {ctor: 'Requesting'};
var _user$project$Model$NotRequested = {ctor: 'NotRequested'};
var _user$project$Model$initialModel = function (route) {
	return {route: route, signinUser: _user$project$Model$NotRequested, otherUser: _user$project$Model$NotRequested, currentToken: _user$project$Model$NotRequested, listPackages: _user$project$Model$NotRequested, detailedPackage: _user$project$Model$NotRequested, search: '', newTokenName: '', isFadein: _user$project$Model$initialIsFadein};
};
