var _user$project$Views_Settings$createListItem = function (token) {
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('token'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$i,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('fas fa-key'),
					_1: {ctor: '[]'}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$a,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('token-name'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(token.name),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('delete-token'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Messages$RevokeToken(token.id)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Revoke'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('token-item token-id'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(token.id),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('token-item token-date'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												A2(_elm_lang$core$Basics_ops['++'], 'Created in ', token.created_date)),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html$text(', '),
												_1: {
													ctor: '::',
													_0: function () {
														var _p0 = token.last_used_date;
														if (_p0.ctor === 'Nothing') {
															return _elm_lang$html$Html$text('Never used');
														} else {
															return _elm_lang$html$Html$text(_p0._0);
														}
													}(),
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Views_Settings$genTokenList = function (token) {
	var _p1 = token;
	switch (_p1.ctor) {
		case 'Success':
			return A2(_elm_lang$core$List$map, _user$project$Views_Settings$createListItem, _p1._0);
		case 'Requesting':
			return {
				ctor: '::',
				_0: _elm_lang$html$Html$text('Loading...'),
				_1: {ctor: '[]'}
			};
		default:
			return {
				ctor: '::',
				_0: _elm_lang$html$Html$text('No API key was created so far'),
				_1: {ctor: '[]'}
			};
	}
};
var _user$project$Views_Settings$tokens = function (model) {
	var _p2 = model.signinUser;
	if (_p2.ctor === 'Success') {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('content'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h2,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Tokens'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('If you want to use package commands from the command line, '),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html$text('you will need to login with poac login (token) using one of the tokens listed below.'),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('When working in shared environments, '),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html$text('supplying the token on the command line could expose it to prying eyes.'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html$text(' To avoid this, enter poac login and supply your token when prompted.'),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('new token name'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Messages$HandleTokenInput),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Messages$CreateToken),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Create a new token'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('list'),
											_1: {ctor: '[]'}
										},
										_user$project$Views_Settings$genTokenList(model.currentToken)),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('content'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h2,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Tokens'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Please signin'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Views_Settings$profile = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('content'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Edit Page'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views_Settings$addSelected = F2(
	function (id, currentId) {
		return _elm_lang$core$Native_Utils.eq(id, currentId) ? ' selected' : '';
	});
var _user$project$Views_Settings$createMenuItem = F3(
	function (id, currentId, content) {
		return A2(
			_elm_lang$html$Html$a,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Messages$NavigateTo(
						_user$project$Routing$SettingsRoute(currentId))),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'menu-item',
							A2(_user$project$Views_Settings$addSelected, id, currentId))),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$i,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('fas fa-book-open'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'font-weight', _1: '900'},
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html$text(content),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Views_Settings$menu = function (id) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('menu'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$nav,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Messages$NavigateTo(
									_user$project$Routing$UsersRoute('matken11235'))),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('menu-item'),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$i,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('fas fa-book-open'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'font-weight', _1: '900'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20px'},
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('menu-name'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('My Page'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$a,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Messages$NavigateTo(
										_user$project$Routing$SettingsRoute('dashboard'))),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'menu-item',
											A2(_user$project$Views_Settings$addSelected, id, 'dashboard'))),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$i,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('fas fa-bolt'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$style(
												{
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'font-weight', _1: '900'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20px'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '4px'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'padding-right', _1: '4px'},
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}),
											_1: {ctor: '[]'}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$a,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('menu-name'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Dashboard'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$a,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Messages$NavigateTo(
											_user$project$Routing$SettingsRoute('profile'))),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class(
											A2(
												_elm_lang$core$Basics_ops['++'],
												'menu-item',
												A2(_user$project$Views_Settings$addSelected, id, 'profile'))),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$i,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('fas fa-pencil-alt'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'font-weight', _1: '900'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20px'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '1px'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'padding-right', _1: '1px'},
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													}),
												_1: {ctor: '[]'}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$a,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('menu-name'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Edit Page'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$a,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Messages$NavigateTo(
												_user$project$Routing$SettingsRoute('tokens'))),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class(
												A2(
													_elm_lang$core$Basics_ops['++'],
													'menu-item',
													A2(_user$project$Views_Settings$addSelected, id, 'tokens'))),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$i,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('fas fa-cog'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(
														{
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'font-size', _1: '15px'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'font-weight', _1: '900'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20px'},
																	_1: {
																		ctor: '::',
																		_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '1px'},
																		_1: {
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'padding-right', _1: '1px'},
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														}),
													_1: {ctor: '[]'}
												}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('menu-name'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Tokens'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views_Settings$dashboard = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('content'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Dashboard'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('dashboard-storage-content'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$i,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('fas fa-hdd'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'font-weight', _1: '900'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20px'},
													_1: {ctor: '[]'}
												}
											}
										}),
									_1: {ctor: '[]'}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('dashboard-storage'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Storage (MB)'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('ct-chart'),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Views_Settings$view = F2(
	function (model, id) {
		var maybe_content = function () {
			var _p3 = id;
			switch (_p3) {
				case 'dashboard':
					return _elm_lang$core$Maybe$Just(
						_user$project$Views_Settings$dashboard(model));
				case 'profile':
					return _elm_lang$core$Maybe$Just(
						_user$project$Views_Settings$profile(model));
				case 'tokens':
					return _elm_lang$core$Maybe$Just(
						_user$project$Views_Settings$tokens(model));
				default:
					return _elm_lang$core$Maybe$Nothing;
			}
		}();
		var _p4 = maybe_content;
		if (_p4.ctor === 'Just') {
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('settings'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _user$project$Views_Settings$menu(id),
					_1: {
						ctor: '::',
						_0: _p4._0,
						_1: {ctor: '[]'}
					}
				});
		} else {
			return _user$project$Views_NotFound$view;
		}
	});
